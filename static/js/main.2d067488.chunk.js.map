{"version":3,"sources":["Components/Form/Form.css","Containers/InputForm/InputForm.css","App.css","logo.svg","Components/Form/Heart/Thalassemia.js","call.js","Containers/InputForm/InputForm.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Details","props","className","classes","container","call","Axios","create","baseURL","InputForm","state","formTitle","formType","options","title","top","opacity","animate","values","age","sex","cp","trestbps","chol","fbs","restecg","thalach","exang","oldpeak","slope","ca","thal","knowledge","result","resultValue","inputHandler","event","idx","newState","target","value","id","setState","submitHandler","console","log","method","url","data","then","res","catch","err","this","formBlock","map","el","formBox","label","type","name","input","onChange","optionContainerRow","optionContainerCol","item","index","optionBox","for","style","zIndex","formContainer","resultContainer","textAlign","width","button","next","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d067488.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_22iZKhB96c5LCgf_KNo8-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_6Ot2Ia-UEkYC9eW0wPD4v\",\"formContainer\":\"_22PtkFl8DaczLRazW3tecq\",\"formBox\":\"_3gqQ7uwBioD7u-qJL0V9mD\",\"input\":\"G8I0JXNyFuKKa_5_Zm9SR\",\"label\":\"_23ckAitZNu2xr2xEykqakP\",\"button\":\"_1ynuohSapgmy2jxfUteUud\",\"next\":\"_1umoIyZdSpXeZeaXdYzNfk\",\"prev\":\"zIN4to2KkZUHy3-qXtBn8\",\"optionBox\":\"_2ahxojw8RQrV6QHwBGKnX0\",\"optionContainerRow\":\"_1paSLIr2camahLe1vifwJU\",\"optionContainerCol\":\"MBMhPnpsMSsgyKWNtg9ns\",\"resultContainer\":\"_3kbHRSgx0tdAfRVTiAyyby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_2vBGDjWDi9-6QYyuXTdXZZ\"};","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport classes from '../Form.css';\n\n\n\nconst Details = props => {\n\n    return (\n        <div className = {classes.container}>\n           <h2>Thalassemia</h2>\n           <p> blood disorder involving lower-than-normal amounts of an oxygen-carrying protein.\n               Thalassemia is an inherited blood disorder characterised by less oxygen-carrying protein (haemoglobin) and fewer red blood cells in the body than normal.</p>\n            <h4>Symptoms</h4>\n            <p>Symptoms include fatigue, weakness, paleness and slow growth.</p>\n        </div>\n    )\n}\n\nexport default Details;","import Axios from 'axios';\n\nexport const call = Axios.create({\n    baseURL : \"https://intense-sierra-73813.herokuapp.com/\"\n})","import React from 'react';\nimport classes from './InputForm.css';\nimport Thal from '../../Components/Form/Heart/Thalassemia';\nimport {call} from '../../call';\nclass InputForm extends React.Component{\n\n    state = {\n        formTitle : ['Age'  , 'Sex' , 'Chest Pain' , 'Resting Blood Pressure',\n        'Cholesterol','Fasting Blood Sugar level > 120 mg/dl',' Rest ECG level','Maximum heart rate of person',\n        'Exercise induced angina','ST depression induced by exercise relative to rest','Slope of the peak exercise ST segment',\n        'Number of major vessels','Thalassemia'],\n        formType : [ 'number' , 'option' , 'option' , 'number' , 'number' , 'option' , 'option' , 'number',\n        'option' , 'option' , 'option' , 'option' , 'option'],\n        options : [null, ['Male' , 'Female'], [\"Yes\" , \"No\"], null, null , [\"Yes\" , \"No\"], [1,2,3],null,['Yes' , 'No'],[0,1,2,3,4],[0,1,2],[0,1,2,3],\n        [\n           \"None\",\n                \"Fixed defect (no blood flow in some part of the heart)\",\n               \"Normal blood flow\",\n                \"Reversible defect (a blood flow is observed but it is not normal)\" \n        ]\n    ],\n        title : ['age','sex','cp','trestbps','chol','fbs','restecg','thalach','exang','oldpeak','slope','ca','thal'],\n        top: 12,\n        opacity : [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n        animate : false,\n        values : {\n            age : '25',\n            sex : 0,\n            cp: 0,\n            trestbps : 125,\n            chol: 212,\n            fbs : 0,\n            restecg : 1,\n            thalach : 168,\n            exang : 0,\n            oldpeak : 1.0,\n            slope : 2,\n            ca : 2,\n            thal : 3,\n        },\n        knowledge : [\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            <Thal />,\n        ],\n        result : null,\n        resultValue : 0,\n\n    }\n    inputHandler = (event, idx) => {\n        // console.log(event.target);\n        let newState = {...this.state.values};\n        if(this.state.formType[idx] !== 'option'){\n            newState[this.state.title[idx]] = event.target.value;\n        }else{\n            newState[this.state.title[idx]] = event.target.id;\n        }\n        this.setState({\n            ...this.state,\n            values : {\n                ...newState\n            }\n        })\n    }\n\n    submitHandler = () => {\n        console.log(\"done\");\n        call({\n            method : \"POST\",\n            url : '/predict',\n            data : {\n                ...this.state.values\n            }\n        }).then(res => {\n            this.setState({\n                result :true,\n                resultValue : res.data.result\n            })\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n    render(){\n        console.log(this.state.values);\n        const formBlock = this.state.formTitle.map((el , idx) => {\n            return(\n                <div className = {classes.formBox}>\n                    <label className = {classes.label}>{el}</label>\n\n                    {this.state.formType[idx] !== 'option' ? \n                    <input type = {this.state.formType[idx]} name = {el} className = {classes.input}\n                        onChange = {(event) => this.inputHandler(event , idx)}\n                    />\n                    :<div className = {idx !== 12 ? classes.optionContainerRow : classes.optionContainerCol}>\n\n                      {this.state.options[idx].map((item ,index) => {\n\n                          return (\n                              <div className = {classes.optionBox}>\n                              <label for = {item}>{item}</label>\n                              <input type = \"radio\" name = {idx} id = {index} \n                                  \n                                  onChange = {(event) => this.inputHandler(event , idx)}\n                                  value = {this.state.values[idx]}\n                              />\n                              </div>\n                          )\n                      })}\n                    </div>}\n                    {this.state.knowledge[idx]}\n                    \n                    {/* <button className = {`${classes.button} ${classes.prev}`} onClick = {() => {\n                        let arr = this.state.opacity;\n                        arr[idx] = 0;\n                        this.setState({\n                            top : (this.state.top - 1) % 14,\n                            opacity : arr\n                        })\n                    }}>Previous</button> */}\n\n                </div>\n            )\n           \n        })\n\n        return (\n            <div className = {classes.container}> \n                <h2 style = {{zIndex : 5000}}>Heart Disease Prediction</h2>\n                <div className = {classes.formContainer}>\n                   \n                    {this.state.result ? (\n                        <div className = {classes.resultContainer}>\n                            <h4 style = {{textAlign : \"center\",width:\"100%\"}}>{this.state.resultValue === 1 ? \"Sorry to say but your Heart is not healthy !\" :\n                            \"Congratulations , your Heart is Healthy !\"}</h4>\n                        </div>\n                    ) :\n                    <div className = {classes.formContainer}> \n                    {formBlock}\n                    <button className = {`${classes.button} ${classes.next}`} \n                    onClick = {this.submitHandler}\n                    >Submit</button>\n                    </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default InputForm;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport classes from './App.css';\nimport FormBlock from './Containers/InputForm/InputForm';\nfunction App() {\n  return (\n    <div className={classes.App}>\n      <FormBlock />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}